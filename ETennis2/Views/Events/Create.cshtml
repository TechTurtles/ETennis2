
@model ETennis2.Model.ViewModel.EventViewModel
@using ETennis2.Extensions

@{
    ViewData["Title"] = "Create";
}

<h4 class="mt-5 text-info">New Events </h4>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="form-group row">
            <div class="form-group">
                <label asp-for="Event.Name" class="control-label"></label>
                <input asp-for="Event.Name" class="form-control" />
                <span asp-validation-for="Event.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Event.Description" class="control-label"></label>
                <input asp-for="Event.Description" class="form-control" />
                <span asp-validation-for="Event.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="col-lg-2">
                    <label asp-for="Coach"></label>
                </div>
                <div class="col-5">
                    <select asp-for="@Model.Event.CoachId" asp-items="Model.Coach.ToSelectListItem(Model.Event.CoachId)" class="form-control"></select>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Event.Date" class="control-label"></label>
                <input asp-for="Event.Date" class="form-control" />
                <span asp-validation-for="Event.Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-success">Back to List</a>
            </div>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

